import{state as e}from"./constants.js";import{ui as t,initGlobalModalListeners as n}from"./uiUtils.js";import{viewManager as i}from"./viewManager.js";import{fileHandler as d}from"./fileHandler.js";import{converter as o,resultCache as a}from"./converter.js";import{configManager as r}from"./configManager.js";import{quoteManager as l}from"./quoteManager.js";import{dialoguePreview as c}from"./dialoguePreview.js";import{batchProcessor as s}from"./batchProcessor.js";import{costumeManager as m}from"./costumeManager.js";import{positionManager as g}from"./positionManager.js";import{perfMonitor as p}from"./performance.js";function initializeApp(){bindClassicViewEvents(),bindSplitViewEvents(),bindViewSwitchEvents(),bindModalEvents(),initializePerformanceOptimizations(),g.init(),d.setupFileDragDrop(),r.loadConfig(),m.loadCostumeConfig(),n(),i.initializeSplitResizer(),window.location.search.includes("debug=true")&&addPerformancePanel()}function initializePerformanceOptimizations(){o.convertText=p.measureTime(o.convertText.bind(o),"convertText"),o.updateSplitPreview=p.measureTime(o.updateSplitPreview.bind(o),"updateSplitPreview"),axios.interceptors.request.use(e=>(e.metadata={startTime:performance.now()},e)),axios.interceptors.response.use(e=>{if(e.config.metadata){let t=performance.now()-e.config.metadata.startTime;p.recordMetric("apiResponseTime",t)}return e},e=>{if(e.config&&e.config.metadata){let t=performance.now()-e.config.metadata.startTime;p.recordMetric("apiResponseTime",t)}return Promise.reject(e)})}function addPerformancePanel(){let e=document.createElement("div");e.id="performance-panel",e.style.cssText=`
        position: fixed;
        bottom: 20px;
        right: 20px;
        background: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 15px;
        border-radius: 8px;
        font-family: monospace;
        font-size: 12px;
        z-index: 10000;
        min-width: 200px;
    `,document.body.appendChild(e),setInterval(()=>{let t=p.getReport(),n=a.getStats();window.perfMonitor=p,e.innerHTML=`
            <h4 style="margin: 0 0 10px 0;">Performance Monitor</h4>
            <div>Cache Hit Rate: ${n.hitRate}</div>
            <div>Cache Size: ${n.count}/${a.maxSize}</div>
            <div>API Avg: ${t.apiResponseTime?.average?.toFixed(2)||0}ms</div>
            <div>Convert Avg: ${t.convertText?.average?.toFixed(2)||0}ms</div>
            <button onclick="perfMonitor.exportData()" style="margin-top: 10px;">Export Data</button>
        `},2e3)}function bindClassicViewEvents(){document.getElementById("fileInput").addEventListener("change",d.handleFileUpload.bind(d)),document.getElementById("downloadBtn").addEventListener("click",d.downloadResult.bind(d)),document.getElementById("convertBtn").addEventListener("click",o.convertText.bind(o)),document.getElementById("formatTextBtn").addEventListener("click",i.formatText.bind(i)),document.getElementById("previewModeBtn").addEventListener("click",c.showDialoguePreview.bind(c)),document.getElementById("configBtn").addEventListener("click",r.openConfigModal.bind(r)),document.getElementById("addConfigBtn").addEventListener("click",r.addConfigItem.bind(r)),document.getElementById("saveConfigBtn").addEventListener("click",r.saveConfig.bind(r)),document.getElementById("gotoBestdoriBtn").addEventListener("click",()=>{t.goToBestdori()});let n=document.getElementById("resetConfigBtn");n&&n.addEventListener("click",r.resetConfig.bind(r));let a=document.getElementById("exportConfigBtn");a&&a.addEventListener("click",r.exportConfig.bind(r));let p=document.getElementById("importConfigBtn");p&&p.addEventListener("click",()=>{document.getElementById("importConfigInput").click()});let v=document.getElementById("importConfigInput");v&&v.addEventListener("change",e=>{let t=e.target.files[0];t&&(r.importConfig(t),e.target.value="")});let E=document.getElementById("clearCacheBtn");E&&E.addEventListener("click",r.clearLocalStorage.bind(r));let B=document.getElementById("enableLive2DCheckbox");B&&B.addEventListener("change",t=>{e.enableLive2D=t.target.checked,localStorage.setItem("bestdori_enable_live2d",t.target.checked.toString());let n=document.getElementById("positionConfigBtn");n&&(n.disabled=!t.target.checked);let i=document.getElementById("costumeConfigBtn");i&&(i.disabled=!t.target.checked)});let u=document.getElementById("positionConfigBtn");u&&u.addEventListener("click",()=>{g.openPositionModal()});let b=document.getElementById("costumeConfigBtn");b&&b.addEventListener("click",m.openCostumeModal.bind(m));let f=document.getElementById("saveCostumesBtn");f&&f.addEventListener("click",m.saveCostumes.bind(m));let y=document.getElementById("resetCostumesBtn");y&&y.addEventListener("click",m.resetCostumes.bind(m)),document.getElementById("addCustomQuoteBtn").addEventListener("click",l.addCustomQuoteOption.bind(l)),document.getElementById("helpBtn").addEventListener("click",()=>t.openModal("helpModal")),document.getElementById("batchProcessBtn").addEventListener("click",s.openBatchModal.bind(s)),document.getElementById("batchFileInput").addEventListener("change",s.updateBatchFileList.bind(s)),document.getElementById("startBatchBtn").addEventListener("click",s.startBatchConversion.bind(s)),document.getElementById("downloadBatchResultBtn").addEventListener("click",s.handleBatchDownload.bind(s)),document.getElementById("inputText").addEventListener("input",i.syncTextAreas.bind(i)),document.getElementById("narratorName").addEventListener("input",e=>{document.getElementById("splitNarratorName").value=e.target.value})}function bindSplitViewEvents(){document.getElementById("formatTextSplitBtn").addEventListener("click",i.formatTextSplit.bind(i)),document.getElementById("splitConvertBtn").addEventListener("click",()=>{o.updateSplitPreview(!0)}),document.getElementById("splitDownloadBtn").addEventListener("click",d.downloadSplitResult.bind(d)),document.getElementById("autoPreviewCheckbox").addEventListener("change",t=>{e.autoPreviewEnabled=t.target.checked,e.autoPreviewEnabled&&o.updateSplitPreview()}),document.getElementById("splitGotoBestdoriBtn").addEventListener("click",()=>{t.goToBestdori()});let n=document.getElementById("splitEnableLive2DCheckbox");n&&(n.checked=e.enableLive2D,n.addEventListener("change",t=>{e.enableLive2D=t.target.checked,localStorage.setItem("bestdori_enable_live2d",t.target.checked.toString()),document.getElementById("enableLive2DCheckbox").checked=t.target.checked,e.autoPreviewEnabled&&i.debouncePreview()})),document.getElementById("splitQuoteConfigBtn").addEventListener("click",l.openSplitQuoteModal.bind(l)),document.getElementById("addSplitCustomQuoteBtn").addEventListener("click",l.addSplitCustomQuoteOption.bind(l)),document.getElementById("splitNarratorName").addEventListener("input",t=>{document.getElementById("narratorName").value=t.target.value,e.autoPreviewEnabled&&i.debouncePreview()}),document.getElementById("splitInputText").addEventListener("input",()=>{i.syncTextAreas(),i.debouncePreview()})}function bindViewSwitchEvents(){document.querySelectorAll(".view-btn").forEach(e=>{e.addEventListener("click",i.switchView.bind(i))}),document.querySelectorAll(".preview-mode-btn").forEach(e=>{e.addEventListener("click",i.switchPreviewMode.bind(i))})}function bindModalEvents(){}document.addEventListener("DOMContentLoaded",initializeApp);