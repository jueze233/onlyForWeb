import{state as e}from"./constants.js";import{ui as t}from"./uiUtils.js";import{configManager as s}from"./configManager.js";export const costumeManager={defaultCostumes:{},defaultAvailableCostumes:{},availableCostumes:{},mujicaMapping:{},tempCostumeChanges:{},originalCostumes:{},getCharacterKey:e=>e,getSafeDomId:e=>e.replace(/[^a-zA-Z0-9\u4e00-\u9fa5]/g,"_"),getAvatarId:e=>({337:1,338:2,339:3,340:4,341:5})[e]||e,convertAvailableCostumesToNameBased(){let t={};return Object.entries(e.currentConfig).forEach(([e,s])=>{if(s&&s.length>0){let a=s[0],i=this.getCharacterKey(e);this.defaultAvailableCostumes[a]?t[i]=[...this.defaultAvailableCostumes[a]]:t[i]=[];let o=this.defaultCostumes[a];o&&!t[i].includes(o)&&t[i].push(o)}}),t},convertDefaultCostumesToNameBased(){let t={};return Object.entries(e.currentConfig).forEach(([e,s])=>{if(s&&s.length>0){let a=s[0],i=this.getCharacterKey(e),o=this.defaultCostumes[a];if(o){let l=this.defaultAvailableCostumes[a]||[];l.includes(o)?t[i]=o:t[i]=l[0]||""}else t[i]=""}}),t},async loadCostumeConfig(){try{let s=await axios.get("/api/costumes");this.defaultAvailableCostumes=s.data.available_costumes,this.defaultCostumes=s.data.default_costumes;let a=await axios.get("/api/config");this.builtInCharacters=new Set(Object.keys(a.data.character_mapping)),console.log("内置角色列表:",Array.from(this.builtInCharacters)),console.log("加载的默认服装配置:",this.defaultCostumes),console.log("加载的可用服装列表:",this.defaultAvailableCostumes);let i=this.loadLocalCostumes();i?e.currentCostumes=i:e.currentCostumes=this.convertDefaultCostumesToNameBased();let o=this.loadLocalAvailableCostumes();o?this.availableCostumes=o:this.availableCostumes=this.convertAvailableCostumesToNameBased();let l=localStorage.getItem("bestdori_enable_live2d");e.enableLive2D="true"===l,document.getElementById("enableLive2DCheckbox").checked=e.enableLive2D;let r=document.getElementById("splitEnableLive2DCheckbox");r&&(r.checked=e.enableLive2D)}catch(u){console.error("加载服装配置失败:",u),t.showStatus("无法加载服装配置","error")}},loadLocalCostumes(){try{let e=localStorage.getItem("bestdori_costume_mapping_v2");if(e)return JSON.parse(e)}catch(t){console.error("加载本地服装配置失败:",t)}return null},saveLocalCostumes(e){try{return localStorage.setItem("bestdori_costume_mapping_v2",JSON.stringify(e)),!0}catch(t){return console.error("保存本地服装配置失败:",t),!1}},loadLocalCustomCharacters(){try{let e=localStorage.getItem("bestdori_custom_characters");if(e)return JSON.parse(e)}catch(t){console.error("加载本地自定义角色失败:",t)}return null},saveLocalCustomCharacters(e){try{return localStorage.setItem("bestdori_custom_characters",JSON.stringify(e)),!0}catch(t){return console.error("保存自定义角色失败:",t),!1}},loadLocalAvailableCostumes(){try{let e=localStorage.getItem("bestdori_available_costumes_v2");if(e)return JSON.parse(e)}catch(t){console.error("加载本地可用服装列表失败:",t)}return null},saveLocalAvailableCostumes(){try{let e=Object.keys(this.availableCostumes).length>0&&Object.values(this.availableCostumes).some(e=>Array.isArray(e));if(!e)return console.warn("尝试保存空的可用服装列表，操作已取消"),!1;return localStorage.setItem("bestdori_available_costumes_v2",JSON.stringify(this.availableCostumes)),!0}catch(t){return console.error("保存可用服装列表失败:",t),!1}},getEffectiveCharacterId:(e,t)=>t,async openCostumeModal(){await t.withButtonLoading("costumeConfigBtn",async()=>{await new Promise(e=>setTimeout(e,100)),this.originalCostumes=JSON.parse(JSON.stringify(e.currentCostumes)),this.tempCostumeChanges=JSON.parse(JSON.stringify(e.currentCostumes)),this.renderCostumeList(),t.openModal("costumeModal")},"加载配置...")},renderCostumeList(){let t=document.getElementById("costumeList");t.innerHTML="";let s=Object.entries(e.currentConfig).sort(([,e],[,t])=>{let s=e&&e.length>0?e[0]:1/0,a=t&&t.length>0?t[0]:1/0;return s-a});s.forEach(([e,s])=>{if(!s||0===s.length)return;let a=s[0],i=this.getCharacterKey(e),o=this.getSafeDomId(e),l=this.getAvatarId(a),r=this.availableCostumes[i]||[],u=this.tempCostumeChanges[i]||"",n=document.createElement("div");n.className="costume-config-item",n.innerHTML=`
            <div class="costume-item-header">
                <div class="costume-character-info">
                    <div class="config-avatar" data-id="${a}">
                        ${l>0?`<img src="/static/images/avatars/${l}.png" alt="${e}" class="config-avatar-img" onerror="this.style.display='none'; this.parentElement.innerHTML='${e.charAt(0)}'; this.parentElement.classList.add('fallback');">`:e.charAt(0)}
                    </div>
                    <span class="costume-character-name">
                        ${e} (ID: ${a})
                    </span>
                </div>
                <div class="costume-actions">
                    <button class="btn btn-sm btn-secondary" onclick="costumeManager.toggleCostumeDetails('${o}')">
                        <span id="toggle-${o}">▼</span> 服装管理
                    </button>
                </div>
            </div>
            
            <div id="costume-details-${o}" class="costume-details" style="display: none;">
                <div class="costume-current">
                    <label>当前服装：</label>
                    <select class="form-input costume-select" data-character-key="${i}">
                        <option value="">无服装</option>
                        ${r.map(e=>`<option value="${e}" ${e===u?"selected":""}>${e}</option>`).join("")}
                    </select>
                </div>
                
                <div class="costume-available-list">
                    <div class="costume-list-header">
                        <label>可用服装列表：</label>
                        <button class="btn btn-sm btn-secondary" onclick="costumeManager.addNewCostume('${i}', '${o}')">
                            ➕ 添加服装
                        </button>
                    </div>
                    <div id="costume-list-${o}" class="costume-list-items">
                        ${this.renderCostumeListItems(i,r,o)}
                    </div>
                </div>
            </div>
            `,t.appendChild(n);let c=n.querySelector(".costume-select");c.addEventListener("change",e=>{let t=e.target.dataset.characterKey;this.tempCostumeChanges[t]=e.target.value})})},renderCostumeListItems:(e,t,s)=>t&&0!==t.length?t.map((t,a)=>`
            <div class="costume-list-item">
                <span>${t}</span>
                <div class="costume-item-actions">
                    <button class="btn btn-sm" onclick="costumeManager.editCostume('${e}', ${a}, '${t}', '${s}')">✏️</button>
                    <button class="btn btn-sm btn-danger" onclick="costumeManager.deleteCostume('${e}', ${a}, '${s}')">🗑️</button>
                </div>
            </div>
        `).join(""):'<div class="empty-costume-list">暂无可用服装</div>',toggleCostumeDetails(e){let t=document.getElementById(`costume-details-${e}`),s=document.getElementById(`toggle-${e}`);"none"===t.style.display?(t.style.display="block",s.textContent="▲"):(t.style.display="none",s.textContent="▼")},addNewCostume(e,s){let a=prompt("请输入新的服装ID：");if(a&&a.trim()){let i=a.trim();if(this.availableCostumes[e]||(this.availableCostumes[e]=[]),this.availableCostumes[e].includes(i)){t.showStatus("该服装ID已存在","error");return}this.availableCostumes[e].push(i),this.saveLocalAvailableCostumes(),this.updateCostumeListUI(e,s),t.showStatus(`已添加服装: ${i}`,"success")}},editCostume(s,a,i,o){let l=prompt("编辑服装ID：",i);if(l&&l.trim()&&l!==i){let r=l.trim();if(this.availableCostumes[s].includes(r)){t.showStatus("该服装ID已存在","error");return}this.availableCostumes[s][a]=r,e.currentCostumes[s]===i&&(e.currentCostumes[s]=r),this.saveLocalAvailableCostumes(),this.updateCostumeListUI(s,o),t.showStatus("服装ID已更新","success")}},deleteCostume(s,a,i){let o=this.availableCostumes[s][a];confirm(`确定要删除服装 "${o}" 吗？`)&&(this.availableCostumes[s].splice(a,1),e.currentCostumes[s]===o&&(e.currentCostumes[s]=""),this.saveLocalAvailableCostumes(),this.updateCostumeListUI(s,i),t.showStatus("服装已删除","success"))},deleteCharacter(s){if(!this.customCharacters[s]){t.showStatus("只能删除自定义角色","error");return}if(confirm(`确定要删除角色 "${s}" 吗？这将同时删除该角色的所有服装配置。`)){let a=e.currentConfig[s][0];delete e.currentConfig[s],delete this.customCharacters[s],delete e.currentCostumes[a],delete this.availableCostumes[a],this.saveLocalCustomCharacters(this.customCharacters),this.saveLocalCostumes(e.currentCostumes),this.saveLocalAvailableCostumes(),this.renderCostumeList(),t.showStatus(`已删除角色: ${s}`,"success")}},updateCostumeListUI(t,s){let a=document.getElementById(`costume-list-${s}`);if(a){let i=this.availableCostumes[t]||[];a.innerHTML=this.renderCostumeListItems(t,i,s)}let o=document.getElementById(`costume-details-${s}`);if(o){let l=o.querySelector(".costume-select");if(l&&l.dataset.characterKey===t){let r=e.currentCostumes[t]||"",u=this.availableCostumes[t]||[];l.innerHTML=`
                    <option value="">无服装</option>
                    ${u.map(e=>`<option value="${e}" ${e===r?"selected":""}>${e}</option>`).join("")}
                `,l.value=r}}},addNewCharacter(){let a=prompt("请输入新角色名称：");if(!a||!a.trim())return;let i=prompt("请输入角色ID（必须是数字）：");if(!i||!i.trim())return;let o=parseInt(i);if(isNaN(o)){t.showStatus("角色ID必须是数字","error");return}if(e.currentConfig[a]){t.showStatus("该角色名称已存在","error");return}let l=Object.values(e.currentConfig).some(e=>e.includes(o));if(l){t.showStatus("该角色ID已被使用","error");return}e.currentConfig[a]=[o],this.customCharacters[a]=[o],this.availableCostumes[o]=[],e.currentCostumes[o]="",s.saveLocalConfig(e.currentConfig),this.saveLocalCustomCharacters(this.customCharacters),this.saveLocalAvailableCostumes(),this.renderCostumeList(),t.showStatus(`已添加新角色: ${a} (ID: ${o})`,"success")},async saveCostumes(){await t.withButtonLoading("saveCostumesBtn",async()=>{let s={...this.tempCostumeChanges};console.log("保存的服装配置:",s),await new Promise(e=>setTimeout(e,300)),this.saveLocalCostumes(s)?(e.currentCostumes=s,this.saveLocalAvailableCostumes(),t.showStatus("服装配置已保存！","success"),t.closeModal("costumeModal")):t.showStatus("服装配置保存失败","error")},"保存中...")},async resetCostumes(){confirm("确定要恢复默认服装配置吗？这将只重置内置角色的服装设置，自定义角色的服装配置将保留。")&&await t.withButtonLoading("resetCostumesBtn",async()=>{try{let s={},a={};Object.entries(e.currentConfig).forEach(([t,i])=>{if(!this.builtInCharacters.has(t)){let o=this.getCharacterKey(t);void 0!==e.currentCostumes[o]&&(s[o]=e.currentCostumes[o]),this.availableCostumes[o]&&(a[o]=[...this.availableCostumes[o]])}}),console.log("保留的自定义角色服装配置:",s),localStorage.removeItem("bestdori_costume_mapping_v2"),localStorage.removeItem("bestdori_available_costumes_v2");let i=await axios.get("/api/costumes");this.defaultAvailableCostumes=i.data.available_costumes,this.defaultCostumes=i.data.default_costumes,e.currentCostumes=this.convertDefaultCostumesToNameBasedWithCustom(s),this.availableCostumes=this.convertAvailableCostumesToNameBasedWithCustom(a),this.tempCostumeChanges=JSON.parse(JSON.stringify(e.currentCostumes)),this.originalCostumes=JSON.parse(JSON.stringify(e.currentCostumes)),await new Promise(e=>setTimeout(e,300)),this.renderCostumeList(),this.forceUpdateAllSelects(),t.showStatus("已恢复内置角色的默认服装配置（自定义角色配置已保留）","success")}catch(o){console.error("重置服装配置失败:",o),t.showStatus("重置服装配置失败","error")}},"重置中...")},convertDefaultCostumesToNameBasedWithCustom(t){let s={};return Object.entries(e.currentConfig).forEach(([e,a])=>{if(a&&a.length>0){let i=this.getCharacterKey(e);if(this.builtInCharacters.has(e)){let o=a[0],l=this.defaultCostumes[o];if(l){let r=this.defaultAvailableCostumes[o]||[];r.includes(l)?s[i]=l:s[i]=r[0]||""}else s[i]=""}else void 0!==t[i]?s[i]=t[i]:s[i]=""}}),s},convertAvailableCostumesToNameBasedWithCustom(t){let s={};return Object.entries(e.currentConfig).forEach(([e,a])=>{if(a&&a.length>0){let i=this.getCharacterKey(e);if(this.builtInCharacters.has(e)){let o=a[0];this.defaultAvailableCostumes[o]?s[i]=[...this.defaultAvailableCostumes[o]]:s[i]=[];let l=this.defaultCostumes[o];l&&!s[i].includes(l)&&s[i].push(l)}else t[i]?s[i]=[...t[i]]:s[i]=[]}}),s},forceUpdateAllSelects(){document.querySelectorAll(".costume-select").forEach(t=>{let s=t.dataset.characterKey,a=e.currentCostumes[s]||"",i=Array.from(t.options).some(e=>e.value===a);i?t.value=a:t.value=""})},cancelCostumeChanges(){e.currentCostumes={...this.originalCostumes},this.tempCostumeChanges={},t.closeModal("costumeModal")},exportWithCostumes(t){return{...t,costume_mapping:e.currentCostumes,available_costumes:this.availableCostumes,enable_live2d:e.enableLive2D}},importCostumes(t){if(t.costume_mapping&&(e.currentCostumes=t.costume_mapping,this.saveLocalCostumes(t.costume_mapping)),t.built_in_characters&&(this.builtInCharacters=new Set(t.built_in_characters)),t.available_costumes?(this.availableCostumes=t.available_costumes,this.saveLocalAvailableCostumes()):t.costume_mapping&&!t.available_costumes&&(this.availableCostumes=this.convertAvailableCostumesToNameBased(),this.saveLocalAvailableCostumes()),"boolean"==typeof t.enable_live2d){e.enableLive2D=t.enable_live2d,localStorage.setItem("bestdori_enable_live2d",t.enable_live2d.toString());let s=document.getElementById("enableLive2DCheckbox");s&&(s.checked=t.enable_live2d);let a=document.getElementById("splitEnableLive2DCheckbox");a&&(a.checked=t.enable_live2d)}},convertImportedAvailableCostumes(t){let s={};return Object.entries(e.currentConfig).forEach(([e,a])=>{if(a&&a.length>0){let i=a[0],o=this.getCharacterKey(e);t[i]&&(s[o]=[...t[i]])}}),s}};window.costumeManager=costumeManager;