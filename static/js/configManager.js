import{state as t}from"./constants.js";import{ui as e}from"./uiUtils.js";import{quoteManager as a}from"./quoteManager.js";import{costumeManager as i}from"./costumeManager.js";export const configManager={defaultConfig:null,getAvatarId:t=>({337:1,338:2,339:3,340:4,341:5})[t]||t,async loadConfig(){try{let i=await axios.get("/api/config");this.defaultConfig=i.data.character_mapping,t.quotesConfig=i.data.quotes_config;let r=this.loadLocalConfig();r?(t.currentConfig=r,console.log("已加载本地保存的配置")):(t.currentConfig={...this.defaultConfig},console.log("使用默认配置")),a.renderQuoteOptions()}catch(n){console.error("加载配置失败:",n),e.showStatus("无法加载应用配置","error")}},loadLocalConfig(){try{let t=localStorage.getItem("bestdori_character_mapping");if(t)return JSON.parse(t)}catch(e){console.error("加载本地配置失败:",e)}return null},saveLocalConfig(t){try{return localStorage.setItem("bestdori_character_mapping",JSON.stringify(t)),!0}catch(e){return console.error("保存本地配置失败:",e),!1}},async openConfigModal(){await e.withButtonLoading("configBtn",async()=>{await new Promise(t=>setTimeout(t,100)),this.renderConfigList(),e.openModal("configModal")},"加载配置...")},async resetConfig(){confirm("确定要恢复默认角色配置吗？这将清除您的自定义角色映射和引号设置，但会保留服装配置。")&&await e.withButtonLoading("resetConfigBtn",async()=>{let r={...t.currentCostumes},n=i?{...i.availableCostumes}:{};localStorage.removeItem("bestdori_character_mapping"),t.currentConfig={...this.defaultConfig},localStorage.removeItem("bestdori_custom_quotes"),t.customQuotes=[],i&&await this.updateCostumesAfterConfigReset(r,n),await new Promise(t=>setTimeout(t,300)),this.renderConfigList(),a.renderQuoteOptions(),e.showStatus("已恢复默认角色配置（服装配置已保留）","success")},"重置中...")},async updateCostumesAfterConfigReset(e,a){let r={},n={};Object.entries(t.currentConfig).forEach(([t,o])=>{if(o&&o.length>0){let s=i.getCharacterKey(t),c=o[0];if(void 0!==e[s])r[s]=e[s],n[s]=a[s]||[];else{let l=i.defaultCostumes[c]||"";r[s]=l,i.defaultAvailableCostumes[c]?n[s]=[...i.defaultAvailableCostumes[c]]:n[s]=[]}}}),t.currentCostumes=r,i.availableCostumes=n,i.saveLocalCostumes(r),i.saveLocalAvailableCostumes()},renderConfigList(){let e=document.getElementById("configList");e.innerHTML="";let a=Object.entries(t.currentConfig).sort(([,t],[,e])=>{let a=t&&t.length>0?t[0]:1/0,i=e&&e.length>0?e[0]:1/0;return a-i});a.forEach(([t,a])=>{let i=document.createElement("div");i.className="config-item";let r=a&&a.length>0?a[0]:0,n=this.getAvatarId(r),o=n>0?`/static/images/avatars/${n}.png`:"";i.innerHTML=`
                <div class="config-avatar-wrapper">
                    <div class="config-avatar" data-id="${r}">
                        ${n>0?`<img src="${o}" alt="${t}" class="config-avatar-img" onerror="this.style.display='none'; this.parentElement.innerHTML='${t.charAt(0)}'; this.parentElement.classList.add('fallback');">`:t.charAt(0)}
                    </div>
                </div>
                <input type="text" placeholder="角色名称" value="${t}" class="form-input config-name">
                <input type="text" placeholder="ID列表(逗号分隔)" value="${a.join(",")}" class="form-input config-ids">
                <button class="remove-btn" onclick="removeConfigItem(this)">删除</button>
            `;let s=i.querySelector(".config-ids"),c=i.querySelector(".config-avatar-wrapper");s.addEventListener("input",e=>{let a=e.target.value.split(",").map(t=>parseInt(t.trim())).filter(t=>!isNaN(t)),i=a.length>0?a[0]:0;this.updateConfigAvatar(c,i,t)}),e.appendChild(i)})},updateConfigAvatar(t,e,a){let i=t.querySelector(".config-avatar");i.dataset.id=e;let r=this.getAvatarId(e);if(r>0){i.className="config-avatar",i.innerHTML=`<img src="/static/images/avatars/${r}.png" alt="${a}" class="config-avatar-img">`;let n=i.querySelector("img");n.onerror=()=>{i.innerHTML=a.charAt(0),i.classList.add("fallback")}}else i.className="config-avatar fallback",i.innerHTML=a.charAt(0)},addConfigItem(){let t=document.getElementById("configList"),e=document.createElement("div");e.className="config-item",e.innerHTML=`
            <div class="config-avatar-wrapper">
                <div class="config-avatar fallback" data-id="0">?</div>
            </div>
            <input type="text" placeholder="角色名称" class="form-input config-name">
            <input type="text" placeholder="ID列表(逗号分隔)" class="form-input config-ids">
            <button class="remove-btn" onclick="removeConfigItem(this)">删除</button>
        `;let a=e.querySelector(".config-ids"),i=e.querySelector(".config-name"),r=e.querySelector(".config-avatar-wrapper");a.addEventListener("input",t=>{let e=t.target.value.split(",").map(t=>parseInt(t.trim())).filter(t=>!isNaN(t)),a=e.length>0?e[0]:0,n=i.value||"?";this.updateConfigAvatar(r,a,n)}),i.addEventListener("input",t=>{let e=r.querySelector(".config-avatar");e.classList.contains("fallback")&&(e.innerHTML=t.target.value.charAt(0)||"?")}),t.prepend(e)},async saveConfig(){await e.withButtonLoading("saveConfigBtn",async()=>{let a=document.querySelectorAll(".config-item"),i={};a.forEach(t=>{let e=t.querySelector(".config-name").value.trim(),a=t.querySelector(".config-ids").value.trim();if(e&&a){let r=a.split(",").map(t=>parseInt(t.trim())).filter(t=>!isNaN(t));r.length>0&&(i[e]=r)}}),await new Promise(t=>setTimeout(t,500)),this.saveLocalConfig(i)?(t.currentConfig=i,e.showStatus("配置已保存到本地！","success"),e.closeModal("configModal")):e.showStatus("配置保存失败，可能是存储空间不足","error")},"保存中...")},async exportConfig(){await e.withButtonLoading("exportConfigBtn",async()=>{let a={character_mapping:t.currentConfig,custom_quotes:t.customQuotes,costume_mapping:t.currentCostumes,available_costumes:i?i.availableCostumes:{},built_in_characters:i?Array.from(i.builtInCharacters):[],enable_live2d:t.enableLive2D,export_date:new Date().toISOString(),version:"1.3"},r=JSON.stringify(a,null,2),n=new Blob([r],{type:"application/json"}),o=URL.createObjectURL(n);await new Promise(t=>setTimeout(t,300));let s=document.createElement("a");s.href=o,s.download=`bestdori_config_${new Date().toISOString().slice(0,10)}.json`,document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(o),e.showStatus("配置已导出（包含自定义角色信息）","success")},"导出中...")},importConfig(r){let n=new FileReader;n.onload=r=>{try{let n=JSON.parse(r.target.result);n.character_mapping?(t.currentConfig=n.character_mapping,this.saveLocalConfig(n.character_mapping),n.custom_quotes&&(t.customQuotes=n.custom_quotes,a.saveCustomQuotes()),(n.costume_mapping||n.available_costumes||"boolean"==typeof n.enable_live2d)&&i.importCostumes(n)):(t.currentConfig=n,this.saveLocalConfig(n)),this.renderConfigList(),a.renderQuoteOptions(),e.showStatus("配置导入成功","success")}catch(o){e.showStatus("配置文件格式错误","error")}},n.readAsText(r)}};