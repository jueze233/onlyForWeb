import{state as t}from"./constants.js";import{ui as e}from"./uiUtils.js";import{quoteManager as a}from"./quoteManager.js";import{costumeManager as o}from"./costumeManager.js";import{positionManager as i}from"./positionManager.js";export const configManager={defaultConfig:null,getAvatarId:t=>({229:6,337:1,338:2,339:3,340:4,341:5})[t]||t,async loadConfig(){try{let o=await axios.get("/api/config");this.defaultConfig=o.data.character_mapping,t.quotesConfig=o.data.quotes_config;let i=this.loadLocalConfig();i?(t.currentConfig=i,console.log("已加载本地保存的配置")):(t.currentConfig={...this.defaultConfig},console.log("使用默认配置")),a.renderQuoteOptions()}catch(r){console.error("加载配置失败:",r),e.showStatus("无法加载应用配置","error")}},loadLocalConfig(){try{let t=localStorage.getItem("bestdori_character_mapping");if(t)return JSON.parse(t)}catch(e){console.error("加载本地配置失败:",e)}return null},saveLocalConfig(t){try{return localStorage.setItem("bestdori_character_mapping",JSON.stringify(t)),!0}catch(e){return console.error("保存本地配置失败:",e),!1}},async openConfigModal(){await e.withButtonLoading("configBtn",async()=>{await new Promise(t=>setTimeout(t,100)),this.renderConfigList(),e.openModal("configModal")},"加载配置...")},async resetConfig(){confirm("确定要恢复默认角色配置吗？这将清除您的自定义角色映射和引号设置，但会保留服装配置。")&&await e.withButtonLoading("resetConfigBtn",async()=>{let i={...t.currentCostumes},r=o?{...o.availableCostumes}:{};localStorage.removeItem("bestdori_character_mapping"),t.currentConfig={...this.defaultConfig},localStorage.removeItem("bestdori_custom_quotes"),t.customQuotes=[],o&&await this.updateCostumesAfterConfigReset(i,r),await new Promise(t=>setTimeout(t,300)),this.renderConfigList(),a.renderQuoteOptions(),e.showStatus("已恢复默认角色配置（服装配置已保留）","success")},"重置中...")},async updateCostumesAfterConfigReset(e,a){let i={},r={};Object.entries(t.currentConfig).forEach(([t,n])=>{if(n&&n.length>0){let s=o.getCharacterKey(t),l=n[0];if(void 0!==e[s])i[s]=e[s],r[s]=a[s]||[];else{let c=o.defaultCostumes[l]||"";i[s]=c,o.defaultAvailableCostumes[l]?r[s]=[...o.defaultAvailableCostumes[l],]:r[s]=[]}}}),t.currentCostumes=i,o.availableCostumes=r,o.saveLocalCostumes(i),o.saveLocalAvailableCostumes()},renderConfigList(){document.getElementById("configList");let e=Object.entries(t.currentConfig).sort(([,t],[,e])=>{let a=t&&t.length>0?t[0]:1/0,o=e&&e.length>0?e[0]:1/0;return a-o});this.renderNormalConfigList(e)},renderNormalConfigList(t){let e=document.getElementById("configList");e.innerHTML="",e.style.height="auto",t.forEach(([t,a])=>{let o=document.createElement("div");o.className="config-item";let i=a&&a.length>0?a[0]:0,r=this.getAvatarId(i),n=r>0?`/static/images/avatars/${r}.png`:"";o.innerHTML=`
                <div class="config-avatar-wrapper">
                    <div class="config-avatar" data-id="${i}">
                        ${r>0?`<img src="${n}" alt="${t}" class="config-avatar-img" onerror="this.style.display='none'; this.parentElement.innerHTML='${t.charAt(0)}'; this.parentElement.classList.add('fallback');">`:t.charAt(0)}
                    </div>
                </div>
                <input type="text" placeholder="角色名称" value="${t}" class="form-input config-name">
                <input type="text" placeholder="ID列表(逗号分隔)" value="${a.join(",")}" class="form-input config-ids">
                <button class="remove-btn" onclick="removeConfigItem(this)">删除</button>
            `;let s=o.querySelector(".config-ids"),l=o.querySelector(".config-avatar-wrapper");s.addEventListener("input",e=>{let a=e.target.value.split(",").map(t=>parseInt(t.trim())).filter(t=>!isNaN(t)),o=a.length>0?a[0]:0;this.updateConfigAvatar(l,o,t)}),e.appendChild(o)})},updateConfigAvatar(t,e,a){let o=t.querySelector(".config-avatar");o.dataset.id=e;let i=this.getAvatarId(e);if(i>0){o.className="config-avatar",o.innerHTML=`<img src="/static/images/avatars/${i}.png" alt="${a}" class="config-avatar-img">`;let r=o.querySelector("img");r.onerror=()=>{o.innerHTML=a.charAt(0),o.classList.add("fallback")}}else o.className="config-avatar fallback",o.innerHTML=a.charAt(0)},addConfigItem(){let t=document.getElementById("configList"),e=document.createElement("div");e.className="config-item",e.innerHTML=`
            <div class="config-avatar-wrapper">
                <div class="config-avatar fallback" data-id="0">?</div>
            </div>
            <input type="text" placeholder="角色名称" class="form-input config-name">
            <input type="text" placeholder="ID列表(逗号分隔)" class="form-input config-ids">
            <button class="remove-btn" onclick="removeConfigItem(this)">删除</button>
        `;let a=e.querySelector(".config-ids"),o=e.querySelector(".config-name"),i=e.querySelector(".config-avatar-wrapper");a.addEventListener("input",t=>{let e=t.target.value.split(",").map(t=>parseInt(t.trim())).filter(t=>!isNaN(t)),a=e.length>0?e[0]:0,r=o.value||"?";this.updateConfigAvatar(i,a,r)}),o.addEventListener("input",t=>{let e=i.querySelector(".config-avatar");e.classList.contains("fallback")&&(e.innerHTML=t.target.value.charAt(0)||"?")}),t.prepend(e)},async saveConfig(){await e.withButtonLoading("saveConfigBtn",async()=>{let a=document.querySelectorAll(".config-item"),o={};a.forEach(t=>{let e=t.querySelector(".config-name").value.trim(),a=t.querySelector(".config-ids").value.trim();if(e&&a){let i=a.split(",").map(t=>parseInt(t.trim())).filter(t=>!isNaN(t));i.length>0&&(o[e]=i)}}),await new Promise(t=>setTimeout(t,500)),this.saveLocalConfig(o)?(t.currentConfig=o,e.showStatus("配置已保存到本地！","success"),e.closeModal("configModal")):e.showStatus("配置保存失败，可能是存储空间不足","error")},"保存中...")},async exportConfig(){await e.withButtonLoading("exportConfigBtn",async()=>{let a={character_mapping:t.currentConfig,custom_quotes:t.customQuotes,costume_mapping:t.currentCostumes,available_costumes:o?o.availableCostumes:{},built_in_characters:o?Array.from(o.builtInCharacters):[],enable_live2d:t.enableLive2D,position_config:{autoPositionMode:!i||i.autoPositionMode,manualPositions:i?i.manualPositions:{}},export_date:new Date().toISOString(),version:"1.4"},r=JSON.stringify(a,null,2),n=new Blob([r],{type:"application/json"}),s=URL.createObjectURL(n);await new Promise(t=>setTimeout(t,300));let l=document.createElement("a");l.href=s,l.download=`bestdori_config_${new Date().toISOString().slice(0,10)}.json`,document.body.appendChild(l),l.click(),document.body.removeChild(l),URL.revokeObjectURL(s),e.showStatus("配置已导出（包含位置配置）","success")},"导出中...")},importConfig(r){let n=new FileReader;n.onload=r=>{try{let n=JSON.parse(r.target.result);if(console.log("导入的配置:",n),!n||"object"!=typeof n)throw Error("无效的配置文件格式");if(n.character_mapping)t.currentConfig=n.character_mapping,this.saveLocalConfig(n.character_mapping),console.log("角色映射已导入"),n.custom_quotes&&Array.isArray(n.custom_quotes)&&(t.customQuotes=n.custom_quotes,void 0!==a&&a.saveCustomQuotes&&(a.saveCustomQuotes(),console.log("自定义引号已导入"))),void 0!==o&&o.importCostumes&&(n.costume_mapping||n.available_costumes||"boolean"==typeof n.enable_live2d)&&(o.importCostumes(n),console.log("服装配置已导入")),n.position_config&&void 0!==i&&i.importPositions&&(i.importPositions(n.position_config),console.log("位置配置已导入"));else if(n&&Object.keys(n).length>0)t.currentConfig=n,this.saveLocalConfig(n),console.log("旧版本配置已导入");else throw Error("配置文件中没有有效数据");this.renderConfigList(),void 0!==a&&a.renderQuoteOptions&&a.renderQuoteOptions(),e.showStatus("配置导入成功","success")}catch(s){console.error("配置导入失败:",s),e.showStatus(`配置文件格式错误: ${s.message}`,"error")}},n.onerror=()=>{e.showStatus("文件读取失败","error")},n.readAsText(r)},async clearLocalStorage(){confirm("【警告】此操作将删除所有本地保存的用户数据，包括：\n\n  - 自定义角色映射\n  - 所有角色的服装配置\n  - 自定义引号\n  - Live2D 布局和位置设置\n\n网页将恢复到初始默认状态。此操作无法撤销，确定要继续吗？")&&await e.withButtonLoading("clearCacheBtn",async()=>{let t=["bestdori_character_mapping","bestdori_custom_quotes","bestdori_costume_mapping_v2","bestdori_available_costumes_v2","bestdori_position_config","bestdori_enable_live2d","bestdori_costume_mapping","bestdori_custom_characters",];console.log("正在清除以下本地缓存:",t),t.forEach(t=>{localStorage.removeItem(t)}),await new Promise(t=>setTimeout(t,500)),alert("缓存已成功清除！网页即将重新加载。"),location.reload()},"清除中...")}};