import{state as e,VALID_EXTENSIONS as t,FILE_EXTENSIONS as r}from"./constants.js";import{ui as a}from"./uiUtils.js";export const fileHandler={setupFileDragDrop(){let e=document.getElementById("fileUpload");["dragenter","dragover","dragleave","drop"].forEach(t=>{e.addEventListener(t,this.preventDefaults,!1)}),["dragenter","dragover"].forEach(t=>{e.addEventListener(t,()=>e.classList.add("dragover"),!1)}),["dragleave","drop"].forEach(t=>{e.addEventListener(t,()=>e.classList.remove("dragover"),!1)}),e.addEventListener("drop",this.handleDrop.bind(this),!1)},preventDefaults(e){e.preventDefault(),e.stopPropagation()},handleDrop(e){e.preventDefault(),e.stopPropagation();let t=e.dataTransfer,r=t.files;r.length>0&&(document.getElementById("fileInput").files=r,this.handleFileUpload({target:{files:r}}))},async handleFileUpload(e){let r=e.target.files[0];if(!r)return;let s=r.name.toLowerCase(),o=t.some(e=>s.endsWith(e));if(!o){a.showStatus("只支持 .txt, .docx, .md 文件！","error");return}let n=document.querySelector(".file-upload-label"),l=n.innerHTML;n.innerHTML=`
            <div>
                <div class="loading" style="margin: 0 auto 10px; font-size: 2rem;"></div>
                <div style="font-weight: 600;">正在上传文件...</div>
                <div style="font-size: 0.9rem; color: #718096;">请稍候</div>
            </div>
        `;let d=new FormData;d.append("file",r);try{a.showProgress(20),a.showStatus("正在上传文件...","info");let i=await axios.post("/api/upload",d,{headers:{"Content-Type":"multipart/form-data"}});a.showProgress(100),document.getElementById("inputText").value=i.data.content,document.getElementById("splitInputText").value=i.data.content,a.showStatus("文件上传成功！","success"),setTimeout(()=>a.hideProgress(),1e3)}catch(p){a.showStatus(`文件上传失败: ${p.response?.data?.error||p.message}`,"error"),a.hideProgress()}finally{n.innerHTML=l,document.getElementById("fileInput").value=""}},async downloadResult(){if(!e.currentResult){a.showStatus("没有可下载的结果！","error");return}await a.withButtonLoading("downloadBtn",async()=>{let t=`result_${new Date().toISOString().slice(0,19).replace(/[:-]/g,"")}.json`;try{let r=await axios.post("/api/download",{content:e.currentResult,filename:t},{responseType:"blob"}),s=window.URL.createObjectURL(new Blob([r.data])),o=document.createElement("a");o.href=s,o.setAttribute("download",t),document.body.appendChild(o),o.click(),o.remove(),window.URL.revokeObjectURL(s),a.showStatus("文件下载成功！","success")}catch(n){a.showStatus(`下载失败: ${n.response?.data?.error||n.message}`,"error")}},"下载中...")},async downloadSplitResult(){if(!e.currentResult){a.showStatus("没有可下载的结果！","error");return}await a.withButtonLoading("splitDownloadBtn",async()=>{let t=`result_${new Date().toISOString().slice(0,19).replace(/[:-]/g,"")}.json`;try{let r=await axios.post("/api/download",{content:e.currentResult,filename:t},{responseType:"blob"}),s=window.URL.createObjectURL(new Blob([r.data])),o=document.createElement("a");o.href=s,o.setAttribute("download",t),document.body.appendChild(o),o.click(),o.remove(),window.URL.revokeObjectURL(s),a.showStatus("文件下载成功！","success")}catch(n){a.showStatus(`下载失败: ${n.response?.data?.error||n.message}`,"error")}},"下载中...")}};